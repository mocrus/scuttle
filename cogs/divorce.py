import disnake
from disnake.ext import commands
from cogs.db import collection_marrys

class DivorceAssept(disnake.ui.View):
    def __init__(self, member: disnake.Member, author: disnake.Member):
        super().__init__()
        self.author = author
        self.member = member
    
    #create button
    @disnake.ui.button(label="–ü–æ–≥–æ–¥–∏—Ç–∏—Å—å", style=disnake.ButtonStyle.success)
    async def agree(self, button: disnake.ui.Button, ctx: disnake.Interaction):
        #check who use
        if ctx.author.id != self.member.id:
            return await ctx.send("–ù–µ –ª—ñ–∑—å —Å–≤–æ—ó–º –Ω–æ—Å–æ–º –≤ —á—É–∂—ñ —Å—Ç–æ—Å—É–Ω–∫–∏", ephemeral=True)
        role = disnake.utils.get(ctx.guild.roles, id=1077027040181633076)
        embed = disnake.Embed(
            title=f"{self.author.name} —Ç–∞ {self.member} —Ä–æ–∑–≤–µ–ª–∏—Å—å",
            description=f"–ü–õ–ê–ß–ï–ú–û –í–°–Ü–Ñ–Æ –ü–û–õ–¢–ê–í–°–¨–ö–û–Æ –û–ë–õ–ê–°–¢–Æ, –ö–†–Ü–ú –ö–†–ï–ú–ï–ù–ß–£–ì–ê"
        )
        await collection_marrys.delete_one({"$or": [{"id1": ctx.author.id}, {"id2": ctx.author.id}]})
        await self.author.remove_roles(role)
        await self.member.remove_roles(role)
        await ctx.send(embed=embed, delete_after=60)



    #create button
    @disnake.ui.button(label="–í—ñ–¥–º–æ–≤–∏—Ç–∏", style=disnake.ButtonStyle.red)
    async def reject(self, button: disnake.ui.Button, ctx: disnake.Interaction):
        #check who use
        if ctx.author.id != self.member.id:
            return await ctx.send("–ù–µ –ª—ñ–∑—å —Å–≤–æ—ó–º –Ω–æ—Å–æ–º –≤ —á—É–∂—ñ —Å—Ç–æ—Å—É–Ω–∫–∏", ephemeral=True)
        emed = disnake.Embed(
            title=f"{ctx.author.name} –≤—ñ–¥–º–æ–≤–∏–≤(–ª–∞) {self.author.name} –≤ —Ä–æ–∑–ª—É—á–µ–Ω–Ω—ñ",
            description="–ú–∏ —Ä–∞–¥—ñ —â–æ –≤–∏ –≤–∏—Ä—ñ—à–∏–ª–∏ —Å–≤–æ—ó –ø–∏—Ç–∞–Ω–Ω—è –±–µ–∑ —Ä–æ–∑–ª—É—á–µ–Ω–Ω—è"
        )
        await ctx.send(embed=emed, delete_after=60)
        
class DivorceCog(commands.Cog):
    def __init__(self, bot) -> None:
        self.bot = bot

    @commands.slash_command()
    async def devorce(self, ctx):
        #get marry info
        get_marriage = await collection_marrys.find_one({"$or": [{"id1": ctx.author.id}, {"id2": ctx.author.id}]})
        #check member needs
        if get_marriage is None:
            return await ctx.send("–í–∏ –Ω–µ –≤ –≤—ñ–¥–Ω–æ—Å–∏–Ω–∞—Ö")
        embed = disnake.Embed(
            title=f"–£ –≤–∞—Å —î `1 —Ö–≤–∏–ª–∏–Ω–∞` —â–æ–± –ø—Ä–∏–π–Ω—è—Ç–∏ —á–∏ –≤—ñ–¥—Ö–∏–ª–∏—Ç–∏ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—é!",
            description=f"{ctx.author.mention} –∑—Ä–æ–±–∏–≤ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—é {member.mention} üíô",
            colour = disnake.Colour.from_rgb(255, 192, 203))  # –∫–æ–¥ –∫–æ–ª—å–æ—Ä—É —Ä–æ–∂–µ–≤–æ—ó –ø–æ–ª–æ—Å–∫–∏
        
        if get_marriage['id1']==ctx.author.id:
            member = disnake.utils.get(ctx.guild.members, id=get_marriage['id2'])
        else:
            member = disnake.utils.get(ctx.guild.members, id=get_marriage['id1'])

        await collection_marrys.delete_one(get_marriage)
        await ctx.send(f"{member.mention} –ø–æ—Ç—Ä—ñ–±–µ–Ω –≤–∞—à –ø—ñ–¥–ø–∏—Å –¥–ª—è —Ä–æ–∑–ª—É—á–µ–Ω–Ω—è")
        await ctx.send(embed=embed, delete_after=60)

def setup(bot):
    bot.add_cog(DivorceCog(bot))